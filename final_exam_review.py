# -*- coding: utf-8 -*-
"""final_exam_review

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1nln2u3MVRz8dj8U6ctg69DJsNwGiqwLd
"""

## Q1: Type the lines of code that calls the split method to print only the year part of the variable "date_string"
date_string = '11/26/2020'

#split
month, day, year = date_string.split('/')

#print the year
print(year)

## Q2: Create a program to multiply each element of 'a' with the corresponding element in 'b' and sum the result
## use continue statement to skip multiplication if an element is 0
a = [1,2,0,1]
b = [3,4,6,5]
total = 0

for i in range(len(a)):
    if a[i] == 0:
        continue
    total += a[i] * b[i]
print(total)

# for x in a:
    #if x == 0:
        #continue
    #total += x * b[a.index(x)]

print(total)

## Q3: Create a program to count the occurrences of each word in a sentence
sentence = 'apple banana apple orange banana apple'

#make an empty dictinary
word_count = {}
for word in sentence.split():
    if word not in word_count:
        word_count[word] = 1
    else:
        word_count[word] += 1
print(word_count)

## Q4: Create a program to replace all vowels in a string with the @ character
text = 'Hello, World!'
vowels = 'aeiouAEIOU'

#for each character
for char in text:
    #if character in vowels
    if char in vowels:
        #replace method
        text = text.replace(char, '@')
print(text)

## Q5: Create a program to capitalize the first letter of each word in a sentence
sentence = "it's raining cats and dogs."

#split
#words = sentence.split()

#capitalize each word
#capitalized_words = [word.capitalize() for word in words]

#join with space
#capitalized_sentence = ' '.join(capitalized_words)

#title() method
capitalized_sentence = sentence.title()
print(capitalized_sentence)

## Q6: Create a program to find the longest word in a sentence
sentence = 'Chicago is very different from Boston'

#create a list of the words
sentence_list = sentence.split()

#max method
longest_word = max(sentence_list, key=len)

print(longest_word)

## Q7: Create a program to remove all numeric characters from a string
text = 'Python 3.9 is great for 2024!'

#for loop to iterate through each character
for char in text:
  #check if character is digit
  if char.isdigit():
    #if it is, replace with empty space
    text = text.replace(char, '')
print(text)

## Q8: Create a program to count the number of uppercase letters, lowercase letters, and digits in a string
text = "Hello World! Python3"
upper_case = 0
lower_case = 0
digits = 0

for char in text:
  if char.isupper():
    upper_case += 1
  elif char.islower():
    lower_case += 1
  elif char.isdigit():
    digits += 1

print(f'The number of upper case letters is: {upper_case}. The number of lower case letters is: {lower_case}. The number of digits is: {digits}.')

## Q9: Create a program to check if two strings are anagrams of each other (contain the same characters in a different order).
str1 = 'listen'
str2 = 'silent'

for char in str1:
  if char not in str2:
    print(f'{str1} and {str2} are not anagrams.')
    break
else:
  print(f'{str1} and {str2} are anagrams.')

#sort() method

## Q10: Create a program to track the stock of items in a store and updates the inventory when items are sold.
#initial inventory
inventory = {
    'apple':10,
    'banana':5,
    'orange':8
}

#list of items sold
sold_items = ['apple','banana','grape','apple','orange','banana']

#update inventory based on sold items
for item in sold_items:
    if item in inventory:
        if inventory[item] > 0:  # Check if item is in stock
            inventory[item] -= 1 # Reduce quantity by 1 if in stock
        else:
            print(f"Out of stock for {item}") #if the item is out of stock, a warning message will print.
    else:
        print(f"{item} is not in inventory") #if the item in sold_items list is not in inventory list, an error message will print.

#print the updated inventory
print("Updated Inventory:")
for item, quantity in inventory.items():
    print(f"{item}: {quantity}")

## Q11: Suppose the file “sample.txt” exists on your computer. What will be printed in the console if you run the below code and enter “sample.txt” as input?
try:
    #prompt user for file name
    file_name = input("Enter name of file to read:")

    #open and read the file
    with open(file_name, 'r') as file:
      lines = file.readlines()

    #count number of lines
    line_count = len(lines)
    print(f"The file {file_name} has {line_count} lines.")

except FileNotFoundError:
    print(f"Error: The file {file_name} does not exist.")
except PermissionError:
    print(f"Error: You do not have permission to read the file {file_name}.")
except Exception as e:
    print(f"An error occurred: {e}")

 #unexpected error

## Q12: Suppose the file “sample.txt” exists on your computer. What will be printed in the console if you run the below code and enter “sample.txt” as input?
total = 0
try:
    #prompt user for file name
    file_name = input("Enter name of file to read:")

    #open and read the file
    with open(file_name, 'r') as file:
        for line in file:
          #use strip to remove extra white space
          number = float(line.strip())
          total += number
    print(f"The sum of the numbers in {file_name} is: {total}")

except FileNotFoundError:
    print(f"Error: The file {file_name} does not exist.")
except PermissionError:
    print(f"Error: You do not have permission to read the file {file_name}.")
except ValueError as e:
    print(f"An unexpected error occurred: {e}")

#unexpected error: could not conver string to float

## Q13: Suppose the file “numbers.txt” exists on your computer. What will be printed in the console if you run the below code and enter “numbers.txt” as input?
try:
    #prompt user for file name
    file_name = input("Enter name of file to read:")

    total = 0 #to store sum of numbers

    #open and read the file
    with open(file_name, 'r') as file:
        for line in file:
          try:
            #try to convert line to a number
            number = float(line.strip())
            total += number
          except ValueError:
            #handle cases where the line is not a valid number
            print(f"Skipping invalid number: {line.strip()}")

    print(f'The total sum of numbers in the file is: {total}')

except FileNotFoundError:
    print(f"Error: The file {file_name} does not exist.")
except PermissionError:
    print(f"Error: You do not have permission to read the file {file_name}.")
except Exception as e:
    print(f"An unexpected error occurred: {e}")

#value error because 'abc' is not a number - skip 'abc'