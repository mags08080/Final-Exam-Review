# -*- coding: utf-8 -*-
"""final_exam_review2

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/17C35QTmxjgqMx4Pmi7zxodsTP5cNZY3s
"""

## Q1. What will the following code return when you call the function
def multiply_func(a, b=2):
  return a * b

print(multiply_func(5))
#guess: 5 * 2 = 10

print(multiply_func(5,3))
#guess: 5 * 3 = 15

## Q2. Make a new list containing every sexond item in the original list
#original list
x = [1,2,4,5,6,7,8,10]

#output should be [1,4,6,8]
print(x[::2])

## Q3. What will the code return when you run it
a = [1,2,3,4,5,6,7,8,9]

#negative slice --> -1 = last element in list
d = a[-4:-1]

print(d)
#guess: [6,7,8]

## Q4. Write the line of code to access the second sublist and return last 2 elements
nested = [[1,2,3],[4,5,6],[7,8,9]]

#nested[1] accesses the second sublist
print(nested[1][-2:])

## Q5. Write the line of code to reverse each for of the nested list
nested_list = [
    [1,2,3],
    [4,5,6],
    [7,8,9]
  ]

#loop to iterate through each sublist
for i in range(len(nested_list)):
  #use slicing to reverse
  nested_list[i] = nested_list[i][::-1]

print(nested_list)

## Q6. Modify the list of words to output as hyphenated
words = ['Deep','fried','wings']

#join function
concatenated_string = '-'.join(words)
print(concatenated_string)

## Q7. Write the lines of code to find the last occurrence of a substring within a string and the search is limited to the first 30 characters of the string.
text = 'The beach is beautiful, and spending time at the beach is always enjoyable!'
substring = 'beach'

#search the first 30 characters
text.find(substring[0:30])

#rindex (substring, 0, 30)

## Q8. Write the line of code to remove the leading zeros
number_str = '00012345'

print(number_str.strip('0'))

## Q9. Write the lines of code to display as multiline text
text = ['Line1','Line2','Line3']

#join function
multiline = '\n'.join(text)
print(multiline)

## Q10. Write a program to calculate the Body Mass Index (BMI) based on user-provided height and weight.
## If BMI equal or above 25, then the person is overweight. Here is the formula for BMI.
## Display the result using formatted string.
#get user weight
weight = int(input("Enter your weight in kg: "))

#get user height
height = int(input("Enter your height in m: "))

BMI = weight / (height**2)

if BMI >= 25:
  print("You are overweight.")
else:
  print("You are not overweight.")